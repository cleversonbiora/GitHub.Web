{"version":3,"sources":["Services/GitHubService.js","Components/ListItem.js","Pages/Home.js","Pages/NotFound.js","Pages/Repository.js","App.js","serviceWorker.js","index.js"],"names":["API_URL","ListItem","_this$props","this","props","name","description","id","htmlUrl","react_default","a","createElement","className","style","marginBottom","react_router_dom","to","concat","href","target","rel","Component","Home","_this","Object","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","state","repositories","languange","match","params","decodeURIComponent","getRepositories","prevProps","setState","_this2","ToastsStore","info","language","qtd","fetch","encodeURIComponent","headers","Accept","Content-Type","method","then","response","json","ListTop","success","data","error","errors","map","erro","catch","repo","idx","Components_ListItem","assign","key","lib","store","NotFound","Repository","repository","getRepository","GetById","_this$state$repositor","owner","readMe","src","avatarUrl","alt","height","login","padding","react_markdown_default","source","escapeHtml","App","react_router","exact","path","component","Boolean","window","location","hostname","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.bf00ce47.chunk.js","sourcesContent":["//export const API_URL = \"http://localhost:52950/api\";\r\nexport const API_URL = \"https://githubtop.azurewebsites.net\";\r\nexport function ListTop(language, qtd){\r\n    return fetch(`${API_URL}/Repository/ListTop?language=${encodeURIComponent(language)}&qtd=${qtd}`, { \r\n      headers: {\r\n        'Accept': 'application/json',\r\n        'Content-Type': 'application/json'\r\n      },\r\n      method: 'GET'\r\n    })\r\n    .then(response => response.json());\r\n}\r\n\r\nexport function GetById(id){\r\n  return fetch(`${API_URL}/Repository/${id}`, { \r\n    headers: {\r\n      'Accept': 'application/json',\r\n      'Content-Type': 'application/json'\r\n    },\r\n    method: 'GET'\r\n  })\r\n  .then(response => response.json());\r\n}","import React, { Component } from 'react';\nimport { Link } from \"react-router-dom\";\n\nclass ListItem extends Component {\n  render() {\n    const {\n        name,\n        description,\n        id,\n        htmlUrl\n    } = this.props;\n    return (\n      <div className=\"card\" style={{marginBottom:\"5px\"}}>\n        <div className=\"card-body\">\n          <h5 className=\"card-title\">{name}</h5>\n          <p className=\"card-text\">{description}</p>\n          <Link to={`/repository/${id}`} className=\"btn btn-success\">Detalhes</Link>&nbsp;\n          <a href={htmlUrl} target=\"_blank\" rel=\"noopener noreferrer\" className=\"btn btn-primary\">Ver no GitHub</a>\n        </div>\n      </div>\n    );\n  }\n}\nexport default ListItem;\n","import React, { Component } from 'react';\nimport {ListTop} from '../Services/GitHubService';\nimport {ToastsContainer, ToastsStore} from 'react-toasts';\nimport ListItem from '../Components/ListItem';\nimport { Link } from \"react-router-dom\";\n\nclass Home extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      repositories: [],\n      languange: this.props.match.params.languange ? decodeURIComponent(this.props.match.params.languange) : 'c#'\n    };\n    this.getRepositories();\n  }\n\n  componentDidUpdate(prevProps) {\n    if (this.props.match.params.languange !== prevProps.match.params.languange) {\n      this.setState({languange: this.props.match.params.languange ? decodeURIComponent(this.props.match.params.languange) : 'c#'});\n      this.getRepositories();\n    }\n  }\n  getRepositories(){\n    ToastsStore.info(\"Carregando...\");\n    let language = this.props.match.params.languange ? decodeURIComponent(this.props.match.params.languange) : 'c#';\n    ListTop(language, 10).then(json => {\n      if(json.success){\n        this.setState({repositories: json.data});\n      }else{\n        ToastsStore.error(json.errors.map(erro => erro));\n      }\n    }).catch(error => ToastsStore.error(\"Falha na busca\"));\n  }\n\n  render() {\n    const repositories = this.state.repositories.map(function(repo, idx) {\n      return <ListItem key={idx} {...repo}/>\n    });\n    return (\n        <div className=\"container\">\n          <div className=\"row\">\n          <div className=\"jumbotron col-12\">\n            <div className=\"container\">\n              <h1>GitHub Trending Topics</h1>\n              <p className=\"lead\">Esta p√°gina lista os reposit√≥rios com mais estrelas no GitHub.</p>\n            </div>\n          </div>\n          </div>\n          <div className=\"row\">\n            <div className=\"col-3\">\n              <ul className=\"list-group\">\n                <li className={`list-group-item ${(this.state.languange === 'c#' ? 'active':'')}`}>\n                  <Link to={`/l/c%23`}>C#</Link>\n                </li>\n                <li className={`list-group-item ${(this.state.languange === 'javascript' ? 'active':'')}`}>\n                  <Link to={`/l/javascript`}>JavaScript</Link>\n                </li>\n                <li className={`list-group-item ${(this.state.languange === 'c++' ? 'active':'')}`}>\n                  <Link to={`/l/c++`}>C++</Link>\n                </li>\n                <li className={`list-group-item ${(this.state.languange === 'kotlin' ? 'active':'')}`}>\n                  <Link to={`/l/kotlin`}>Kotlin</Link>\n                </li>\n                <li className={`list-group-item ${(this.state.languange === 'swift' ? 'active':'')}`}>\n                  <Link to={`/l/swift`}>Swift</Link>\n                </li>\n              </ul>\n            </div>\n            <div className=\"col\">\n              {repositories}\n            </div>\n          </div>\n          <ToastsContainer store={ToastsStore}/>\n        </div>\n    );\n  }\n}\nexport default Home;\n","import React, { Component } from 'react';\nimport { Link } from \"react-router-dom\";\n\nclass NotFound extends Component {\n  render() {\n    return (\n      <div className=\"container\">\n          <div className=\"row\">\n              <div className=\"col-md-12\">\n                  <div className=\"error-template\">\n                      <h1>\n                          Oops!</h1>\n                      <h2>\n                          404 Not Found</h2>\n                      <div className=\"error-details\">\n                          Sorry, an error has occured, Requested page not found!\n                      </div>\n                      <div className=\"error-actions\">\n                        <Link to='/' className=\"btn btn-primary btn-lg\">Home</Link>\n                      </div>\n                  </div>\n              </div>\n          </div>\n      </div>\n    );\n  }\n}\nexport default NotFound;\n","import React, { Component } from 'react';\nimport {GetById} from '../Services/GitHubService';\nimport {ToastsContainer, ToastsStore} from 'react-toasts';\nimport { Link } from \"react-router-dom\";\nimport ReactMarkdown from 'react-markdown';\n\nclass Repository extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      repository: null\n    };\n    this.getRepository(this.props.match.params.id);\n  }\n  getRepository(id){\n    GetById(id).then(json => {\n      if(json.success){\n        this.setState({repository: json.data});\n      }else{\n        ToastsStore.error(json.errors.map(erro => erro));\n      }\n    }).catch(error => ToastsStore.error(\"Falha na busca\"));\n  }\n  render() {\n    if(!this.state.repository){\n      return(\n      <div className=\"App\">\n        <header className=\"App-header\">\n          <p>\n            Carregando...\n          </p>\n        </header>\n          <ToastsContainer store={ToastsStore}/>\n      </div>);\n    }\n    const {\n        name,\n        description,\n        htmlUrl,\n        owner,\n        readMe\n    } = this.state.repository;\n    return (\n        <div className=\"container\">\n          <div className=\"row\">\n            <div className=\"jumbotron col-12\">\n              <div className=\"container\">\n                <h1>{name}</h1>\n                <p className=\"lead\">{description}</p>\n                <a href={htmlUrl} target=\"_blank\" rel=\"noopener noreferrer\" className=\"btn btn-primary\">Ver no GitHub</a>\n              </div>\n            </div>\n          </div>\n          <div className=\"row\">\n            <div className=\"col-12 card\">\n              <div className=\"card-body\">\n                <img src={owner.avatarUrl} alt=\"Imagem do Autor\" style={{height:\"50px\"}}/>\n                <h5 className=\"card-title\">{owner.login}</h5>\n                <h6 className=\"card-subtitle mb-2 text-muted\">Autor</h6>\n                <a href={owner.htmlUrl} target=\"_blank\" rel=\"noopener noreferrer\" className=\"card-link\">Ver no GitHub</a>\n              </div>\n            </div>\n          </div>\n          <div className=\"row\">\n            <div className=\"col-12\"\n                style={{padding:\"20px\"}}>\n            <ReactMarkdown\n                source={readMe} \n                escapeHtml={false}\n              />\n            </div>\n          </div>\n          <div className=\"row\">\n            <div className=\"col-12\">\n              <Link to='/' className=\"btn btn-default btn-lg\">Voltar</Link>\n            </div>\n          </div>\n          <ToastsContainer store={ToastsStore}/>\n        </div>\n    );\n  }\n}\nexport default Repository;\n","import React, { Component } from 'react';\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\nimport Home from './Pages/Home'\nimport './App.css';\nimport NotFound from './Pages/NotFound';\nimport Repository from './Pages/Repository';\n\nclass App extends Component {\n  render() {\n    return (\n      <Router>\n        <Switch>\n          <Route exact path=\"/\" component={Home}/>\n          <Route exact path=\"/l/:languange\" component={Home}/>\n          <Route path=\"/repository/:id\" component={Repository}/>\n          <Route component={NotFound}/>\n        </Switch>\n      </Router>\n    );\n  }\n}\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport 'bootstrap/dist/css/bootstrap.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}